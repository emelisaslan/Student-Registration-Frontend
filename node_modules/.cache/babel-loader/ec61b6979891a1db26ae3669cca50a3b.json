{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evrim\\\\Desktop\\\\frontend\\\\src\\\\pages\\\\Students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // Service\n\nimport { readStudents } from '../services/StudentService'; // Components\n\nimport ListStudents from '../components/ListStudents';\nimport CreateUpdateStudent from '../components/CreateUpdateStudent'; //AlertBox \n\nimport AlertBox from '../components/AlertBox'; // Styles\n\nimport { GlobalStyles } from '../sc/scGlobal'; // Icons\n\nimport { DecorationGreen, DecorationPink } from '../components/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [type, setType] = useState('create');\n  const [open, setOpen] = useState(false);\n  const [studentToUpdate, setStudentToUpdate] = useState(null);\n  const [fetchedStudents, setFetchedStudents] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messageOpen, setMessageOpen] = useState(false);\n  useEffect(() => {\n    readStudents().then(response => setFetchedStudents([...response.data])).catch(() => console.log(\"Cannot connect to the server\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DecorationGreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DecorationPink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListStudents, {\n      fetchedStudents: fetchedStudents,\n      setFetchedStudents: setFetchedStudents,\n      setOpen: setOpen,\n      setType: setType,\n      setStudentToUpdate: setStudentToUpdate,\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateUpdateStudent, {\n      fetchedStudents: fetchedStudents,\n      setFetchedStudents: setFetchedStudents,\n      open: open,\n      setOpen: setOpen,\n      type: type,\n      studentToUpdate: studentToUpdate,\n      setMessage: setMessage,\n      setMessageOpen: setMessageOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertBox, {\n      message: message,\n      messageOpen: messageOpen,\n      setMessageOpen: setMessageOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Students, \"AOnwo76pFMbXdHxtCwo/BKs6Ouo=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["C:/Users/evrim/Desktop/frontend/src/pages/Students.js"],"names":["React","useState","useEffect","readStudents","ListStudents","CreateUpdateStudent","AlertBox","GlobalStyles","DecorationGreen","DecorationPink","Students","type","setType","open","setOpen","studentToUpdate","setStudentToUpdate","fetchedStudents","setFetchedStudents","message","setMessage","messageOpen","setMessageOpen","then","response","data","catch","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,qBAAhD;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,QAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,YAAY,GACXoB,IADD,CACMC,QAAQ,IAAIN,kBAAkB,CAAC,CAAC,GAAGM,QAAQ,CAACC,IAAb,CAAD,CADpC,EAECC,KAFD,CAEO,MAAMC,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAFb;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,4BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,YAAD;AAAc,MAAA,eAAe,EAAEX,eAA/B;AAAgD,MAAA,kBAAkB,EAAEC,kBAApE;AAAwF,MAAA,OAAO,EAAEJ,OAAjG;AAA0G,MAAA,OAAO,EAAEF,OAAnH;AAA4H,MAAA,kBAAkB,EAAEI,kBAAhJ;AAAoK,MAAA,UAAU,EAAEI;AAAhL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,mBAAD;AAAqB,MAAA,eAAe,EAAEH,eAAtC;AAAuD,MAAA,kBAAkB,EAAEC,kBAA3E;AAA+F,MAAA,IAAI,EAAEL,IAArG;AAA2G,MAAA,OAAO,EAAEC,OAApH;AAA6H,MAAA,IAAI,EAAEH,IAAnI;AAAyI,MAAA,eAAe,EAAEI,eAA1J;AAA2K,MAAA,UAAU,EAAEK,UAAvL;AAAmM,MAAA,cAAc,EAAEE;AAAnN;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,OAAnB;AAA4B,MAAA,WAAW,EAAEE,WAAzC;AAAsD,MAAA,cAAc,EAAEC;AAAtE;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAUH,CAxBD;;GAAMZ,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Service\nimport { readStudents } from '../services/StudentService';\n\n// Components\nimport ListStudents from '../components/ListStudents';\nimport CreateUpdateStudent from '../components/CreateUpdateStudent';\n\n//AlertBox \nimport AlertBox from '../components/AlertBox';\n\n// Styles\nimport { GlobalStyles } from '../sc/scGlobal';\n\n// Icons\nimport { DecorationGreen, DecorationPink } from '../components/icons';\n\nconst Students = () => {\n    const [type, setType] = useState('create');\n    const [open, setOpen] = useState(false);\n    const [studentToUpdate, setStudentToUpdate] = useState(null);\n    const [fetchedStudents, setFetchedStudents] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [messageOpen, setMessageOpen] = useState(false);\n\n    useEffect(() => {\n        readStudents()\n        .then(response => setFetchedStudents([...response.data]))\n        .catch(() => console.log(\"Cannot connect to the server\"));\n    }, []);\n\n    return (\n        <>\n            <DecorationGreen />\n            <DecorationPink />\n            <GlobalStyles />\n            <ListStudents fetchedStudents={fetchedStudents} setFetchedStudents={setFetchedStudents} setOpen={setOpen} setType={setType} setStudentToUpdate={setStudentToUpdate} setMessage={setMessage}/>\n            <CreateUpdateStudent fetchedStudents={fetchedStudents} setFetchedStudents={setFetchedStudents} open={open} setOpen={setOpen} type={type} studentToUpdate={studentToUpdate} setMessage={setMessage} setMessageOpen={setMessageOpen}/>\n            <AlertBox message={message} messageOpen={messageOpen} setMessageOpen={setMessageOpen} />\n        </>\n    );\n};\n\nexport default Students;"]},"metadata":{},"sourceType":"module"}