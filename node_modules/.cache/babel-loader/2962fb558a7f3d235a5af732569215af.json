{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evrim\\\\Desktop\\\\frontend\\\\src\\\\components\\\\CreateUpdateStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { InputMask } from 'primereact/inputmask'; // Service\n\nimport { createStudent, updateStudent } from '../services/StudentService'; // Styles\n\nimport { CUSWrapper, CUSForm, CUSHeading, CUSFormGroup, CUSInputItem, CUSInput, CUSSelect, CUSButton, CUSCloseButton } from '../sc/scCreateUpdateStudent'; // Icons\n\nimport { IconNameSurname, IconID, IconPhoneNumber, IconCity, IconDistrict, IconDescription, IconClose, DecorationGreen, DecorationPink } from './icons'; // File Upload\n\nimport { FileUpload } from 'primereact/fileupload';\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"../sc/scProfileImg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CITIES = [{\n  name: 'Ankara',\n  districts: ['Etimesgut', 'Çankaya', 'Mamak', 'Yenimahalle']\n}, {\n  name: 'İstanbul',\n  districts: ['Ataşehir', 'Ümraniye', 'Beşiktaş', 'Kadıköy']\n}];\n\nconst CreateUpdateStudent = ({\n  type,\n  studentToUpdate,\n  open,\n  setOpen,\n  fetchedStudents,\n  setFetchedStudents,\n  setMessage,\n  setMessageOpen\n}) => {\n  _s();\n\n  const [selectedCity, setSelectedCity] = useState(-1);\n  const [selectedDistrict, setSelectedDistrict] = useState(-1);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [student, setStudent] = useState({\n    id: '',\n    name: '',\n    surname: '',\n    phoneNumber: '',\n    city: '',\n    district: '',\n    description: ''\n  });\n  useEffect(() => {\n    if (type !== 'update') return;\n    if (!studentToUpdate) closeCreateUpdateStudent();\n    setStudent({ ...studentToUpdate\n    });\n    setSelectedCity(city => {\n      const index = CITIES.findIndex(el => el.name === studentToUpdate.city);\n      setSelectedDistrict(CITIES[index].districts.findIndex(el => el === studentToUpdate.district));\n      return index;\n    }); // eslint-disable-next-line\n  }, [studentToUpdate]);\n\n  const closeCreateUpdateStudent = () => {\n    setOpen(false);\n    setMessageOpen(false);\n    setSelectedCity(-1);\n    setSelectedDistrict(-1);\n    setStudent({\n      id: '',\n      name: '',\n      surname: '',\n      phoneNumber: '',\n      city: '',\n      district: '',\n      description: '',\n      file: null\n    });\n  };\n\n  const createUpdateStudent = (e, type, student) => {\n    e.preventDefault();\n\n    if (!student.id || !student.name || !student.surname || !student.phoneNumber || !student.city || !student.district || !student.description) {\n      setMessage(\"Please fill all information\");\n      setMessageOpen(true);\n      return;\n    }\n\n    if (student.id <= 0) {\n      setMessage(\"This student id cannot be smaller than 0!\");\n      setMessageOpen(true);\n      return;\n    }\n\n    if (student.name.length < 2) {\n      setMessage(\"Enter a valid, at least 2 character name!\");\n      setMessageOpen(true);\n      return;\n    }\n\n    if (student.surname.length < 2) {\n      setMessage(\"Enter a valid, at least 2 character surname!\");\n      setMessageOpen(true);\n      return;\n    }\n\n    if (!student.city) {\n      setMessage(\"Please select a city\");\n      setMessageOpen(true);\n      return;\n    }\n\n    if (!student.district) {\n      setMessage(\"Please select a district\");\n      setMessageOpen(true);\n      return;\n    }\n\n    const constructedStudent = { ...student,\n      file: uploadedFiles.length > 0 ? uploadedFiles[uploadedFiles.length - 1] : null\n    };\n    (type === 'create' ? createStudent(constructedStudent) : updateStudent(constructedStudent)).then(({\n      data\n    }) => {\n      if (type === 'update') {\n        const index = fetchedStudents.findIndex(s => s.id === student.id);\n        setFetchedStudents(fetchedStudents => {\n          const newFetchedStudents = fetchedStudents.filter(s => s.id !== student.id);\n          newFetchedStudents.splice(index, 0, { ...data\n          });\n          return newFetchedStudents;\n        });\n      } else setFetchedStudents(students => [...students, { ...data\n      }]);\n\n      closeCreateUpdateStudent();\n    }).catch(() => setMessage(\"Cannot \" + type + \" the student\"));\n  };\n\n  const onSelect = ({\n    files\n  }) => {\n    if (files.length > 0) setUploadedFiles(uploadedFiles => [...uploadedFiles, files[0]]);\n  };\n\n  const onRemove = () => {\n    if (uploadedFiles.length > 0) setUploadedFiles(uploadedFiles => {\n      uploadedFiles.pop();\n      return [...uploadedFiles];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CUSWrapper, {\n    openWindow: open ? \"true\" : \"false\",\n    children: [/*#__PURE__*/_jsxDEV(DecorationGreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DecorationPink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CUSCloseButton, {\n      onClick: closeCreateUpdateStudent,\n      children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CUSForm, {\n      children: [/*#__PURE__*/_jsxDEV(CUSHeading, {\n        children: type === 'create' ? 'Create Student' : 'Update Student'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CUSFormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconNameSurname, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSInput, {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: student.name,\n            onChange: e => setStudent(student => {\n              return { ...student,\n                name: e.target.value\n              };\n            }),\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconNameSurname, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSInput, {\n            type: \"text\",\n            placeholder: \"Surname\",\n            value: student.surname,\n            onChange: e => setStudent(student => {\n              return { ...student,\n                surname: e.target.value\n              };\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CUSFormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconID, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSInput, {\n            type: \"number\",\n            placeholder: \"ID\",\n            value: student.id,\n            onChange: e => setStudent(student => {\n              return { ...student,\n                id: e.target.value\n              };\n            }),\n            required: true,\n            disabled: type === 'update'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconPhoneNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSInput, {\n            as: InputMask,\n            style: {\n              fontSize: '1.3rem'\n            },\n            type: \"Phone\",\n            inputMode: \"numeric\",\n            placeholder: \"Phone Number\",\n            value: student.phoneNumber,\n            onChange: e => setStudent(student => {\n              return { ...student,\n                phoneNumber: e.target.value\n              };\n            }),\n            mask: \"(0999) 999 99 99\",\n            maskChar: \"\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CUSFormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconCity, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSSelect, {\n            name: \"\",\n            id: \"\",\n            onChange: e => {\n              setSelectedDistrict(-1);\n              setSelectedCity(e.target.value);\n              setStudent(student => {\n                return { ...student,\n                  city: e.target.value !== \"-1\" ? CITIES[e.target.value].name : '',\n                  district: ''\n                };\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-1\",\n              selected: selectedCity === -1,\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), CITIES.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              selected: selectedCity === index,\n              children: city.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 58\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CUSInputItem, {\n          children: [/*#__PURE__*/_jsxDEV(IconDistrict, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSSelect, {\n            name: \"\",\n            id: \"\",\n            onChange: e => {\n              setSelectedDistrict(e.target.value);\n              setStudent(student => {\n                return { ...student,\n                  district: e.target.value !== \"-1\" ? e.target.value : ''\n                };\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-1\",\n              selected: selectedDistrict === -1,\n              children: \"District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), CITIES[selectedCity] && CITIES[selectedCity].districts.map((district, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: district,\n              selected: selectedDistrict === index,\n              children: district\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 110\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CUSFormGroup, {\n        children: /*#__PURE__*/_jsxDEV(CUSInputItem, {\n          hasDescription: true,\n          children: [/*#__PURE__*/_jsxDEV(IconDescription, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CUSInput, {\n            hasDescription: true,\n            type: \"text\",\n            placeholder: \"Description\",\n            value: student.description,\n            onChange: e => setStudent(student => {\n              return { ...student,\n                description: e.target.value\n              };\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        style: {\n          margin: '2rem 0'\n        },\n        name: \"file\",\n        accept: \"image/*\",\n        onSelect: onSelect,\n        onRemove: onRemove,\n        uploadOptions: {\n          style: {\n            display: 'none'\n          }\n        },\n        cancelOptions: {\n          style: {\n            display: 'none'\n          }\n        },\n        emptyTemplate: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-m-0\",\n          children: \" Drag and drop files to here to upload. (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CUSFormGroup, {\n        hasButton: true,\n        children: /*#__PURE__*/_jsxDEV(CUSButton, {\n          type: \"submit\",\n          onClick: e => createUpdateStudent(e, type, student),\n          children: type === 'create' ? 'Register' : 'Update'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateUpdateStudent, \"iKlBlji+45DLglqUFR4FLof+by0=\");\n\n_c = CreateUpdateStudent;\nexport default CreateUpdateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUpdateStudent\");","map":{"version":3,"sources":["C:/Users/evrim/Desktop/frontend/src/components/CreateUpdateStudent.js"],"names":["React","useEffect","useState","InputMask","createStudent","updateStudent","CUSWrapper","CUSForm","CUSHeading","CUSFormGroup","CUSInputItem","CUSInput","CUSSelect","CUSButton","CUSCloseButton","IconNameSurname","IconID","IconPhoneNumber","IconCity","IconDistrict","IconDescription","IconClose","DecorationGreen","DecorationPink","FileUpload","CITIES","name","districts","CreateUpdateStudent","type","studentToUpdate","open","setOpen","fetchedStudents","setFetchedStudents","setMessage","setMessageOpen","selectedCity","setSelectedCity","selectedDistrict","setSelectedDistrict","uploadedFiles","setUploadedFiles","student","setStudent","id","surname","phoneNumber","city","district","description","closeCreateUpdateStudent","index","findIndex","el","file","createUpdateStudent","e","preventDefault","length","constructedStudent","then","data","s","newFetchedStudents","filter","splice","students","catch","onSelect","files","onRemove","pop","target","value","fontSize","map","margin","style","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { InputMask } from 'primereact/inputmask';\n\n// Service\nimport { createStudent, updateStudent } from '../services/StudentService';\n\n// Styles\nimport { CUSWrapper, CUSForm, CUSHeading, CUSFormGroup, CUSInputItem, CUSInput, CUSSelect, CUSButton, CUSCloseButton } from '../sc/scCreateUpdateStudent';\n\n// Icons\nimport { IconNameSurname, IconID, IconPhoneNumber, IconCity, IconDistrict, IconDescription, IconClose, DecorationGreen, DecorationPink } from './icons';\n\n// File Upload\nimport { FileUpload } from 'primereact/fileupload';\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"../sc/scProfileImg.css\";\n\nconst CITIES = [\n    {\n        name: 'Ankara',\n        districts: ['Etimesgut', 'Çankaya', 'Mamak', 'Yenimahalle']\n    },\n    {\n        name: 'İstanbul',\n        districts: ['Ataşehir', 'Ümraniye', 'Beşiktaş', 'Kadıköy']\n    }\n];\n\nconst CreateUpdateStudent = ({ type, studentToUpdate, open, setOpen, fetchedStudents, setFetchedStudents , setMessage, setMessageOpen}) => {\n    const [selectedCity, setSelectedCity] = useState(-1);\n    const [selectedDistrict, setSelectedDistrict] = useState(-1);\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    const [student, setStudent] = useState({\n        id: '',\n        name: '',\n        surname: '',\n        phoneNumber: '',\n        city: '',\n        district: '',\n        description: '',\n    });\n\n    useEffect(() => {\n        if(type !== 'update')\n            return;\n\n        if(!studentToUpdate)\n            closeCreateUpdateStudent();\n\n        setStudent({ ...studentToUpdate });\n        setSelectedCity(city => { \n            const index = CITIES.findIndex(el => el.name === studentToUpdate.city);\n            setSelectedDistrict(CITIES[index].districts.findIndex(el => el === studentToUpdate.district));\n            return index;\n        });\n        // eslint-disable-next-line\n    }, [studentToUpdate]);\n\n    const closeCreateUpdateStudent = () => {\n        setOpen(false);\n        setMessageOpen(false);\n        setSelectedCity(-1);\n        setSelectedDistrict(-1);\n        setStudent({\n            id: '',\n            name: '',\n            surname: '',\n            phoneNumber: '',\n            city: '',\n            district: '',\n            description: '',\n            file: null\n        });\n    };\n\n    const createUpdateStudent = (e, type, student) => {\n        e.preventDefault();\n        if(!student.id  || !student.name ||  !student.surname ||!student.phoneNumber \n            || !student.city || !student.district || !student.description){\n                setMessage(\"Please fill all information\");\n                setMessageOpen(true);\n                return;\n        }\n\n        if(student.id <= 0){\n            setMessage(\"This student id cannot be smaller than 0!\");\n            setMessageOpen(true);\n            return;\n        }\n\n        if(student.name.length < 2 ){\n            setMessage(\"Enter a valid, at least 2 character name!\");\n            setMessageOpen(true);\n            return;\n        }\n\n        if(student.surname.length < 2 ){\n            setMessage(\"Enter a valid, at least 2 character surname!\");\n            setMessageOpen(true);\n            return;\n        }\n\n        if(!student.city) {\n            setMessage(\"Please select a city\");\n            setMessageOpen(true);\n            return;\n        }\n\n        if(!student.district){\n            setMessage(\"Please select a district\");\n            setMessageOpen(true);\n            return;\n        }\n\n        const constructedStudent = {...student, file: uploadedFiles.length > 0 ? uploadedFiles[uploadedFiles.length - 1] : null};\n        (type === 'create' ? createStudent(constructedStudent) : updateStudent(constructedStudent))\n        .then(({ data }) => {\n            if(type === 'update') {\n                const index = fetchedStudents.findIndex(s => s.id === student.id);\n                setFetchedStudents(fetchedStudents => {\n                    const newFetchedStudents = fetchedStudents.filter(s => s.id !== student.id);\n                    newFetchedStudents.splice(index, 0, { ...data });\n                    return newFetchedStudents;\n                });\n            } else\n                setFetchedStudents(students => [...students, {...data}]);\n\n            closeCreateUpdateStudent();\n        }).catch(() => setMessage(\"Cannot \" + type + \" the student\"));\n    };\n\n    const onSelect = ({ files }) => {\n        if(files.length > 0)\n            setUploadedFiles(uploadedFiles => [...uploadedFiles, files[0]]);\n    }\n\n    const onRemove = () => {\n        if(uploadedFiles.length > 0)\n            setUploadedFiles(uploadedFiles => {\n                uploadedFiles.pop();\n                return [...uploadedFiles];\n            });\n    }\n \n    return (\n        <CUSWrapper openWindow = {open ? \"true\" : \"false\" }>\n            <DecorationGreen />\n            <DecorationPink />\n            <CUSCloseButton onClick={closeCreateUpdateStudent}>\n                <IconClose />\n            </CUSCloseButton>\n            <CUSForm>\n                <CUSHeading>{ type === 'create' ? 'Create Student' : 'Update Student' }</CUSHeading>\n                <CUSFormGroup>\n                    <CUSInputItem>\n                        <IconNameSurname />\n                        <CUSInput \n                            type=\"text\" \n                            placeholder=\"Name\" \n                            value={student.name} \n                            onChange={e => setStudent(student => {return { ...student, name: e.target.value }})} \n                            required\n                            autoComplete=\"off\"\n                        />\n                    </CUSInputItem>\n                    <CUSInputItem>\n                        <IconNameSurname />\n                        <CUSInput \n                            type=\"text\" \n                            placeholder=\"Surname\" \n                            value={student.surname} \n                            onChange={e => setStudent(student => {return { ...student, surname: e.target.value }})} \n                            required\n                        />\n                    </CUSInputItem>\n                </CUSFormGroup>\n                <CUSFormGroup>\n                    <CUSInputItem>\n                        <IconID />\n                        <CUSInput \n                            type=\"number\" \n                            placeholder=\"ID\" \n                            value={student.id} \n                            onChange={e => setStudent(student => {return { ...student, id: e.target.value }})} \n                            required\n                            disabled={type === 'update'}\n                        />\n                    </CUSInputItem>\n                    <CUSInputItem>\n                        <IconPhoneNumber />\n                        <CUSInput as ={InputMask}\n                            style={{fontSize: '1.3rem'}}\n                            type=\"Phone\"\n                            inputMode = \"numeric\"\n                            placeholder=\"Phone Number\" \n                            value={student.phoneNumber} \n                            onChange={e => setStudent(student => {return { ...student, phoneNumber: e.target.value }})} \n                            mask = \"(0999) 999 99 99\"\n                            maskChar=\"\"\n                            required\n                        />\n                    </CUSInputItem>\n                </CUSFormGroup>\n                <CUSFormGroup>\n                    <CUSInputItem>\n                        <IconCity />\n                        <CUSSelect name=\"\" id=\"\" onChange={e => { \n                            setSelectedDistrict(-1);\n                            setSelectedCity(e.target.value);\n                            setStudent(student => { \n                                return { ...student, city: e.target.value !== \"-1\" ? CITIES[e.target.value].name : '', district: ''}\n                            });\n                        }}>\n                            <option value=\"-1\" selected={selectedCity === -1}>City</option>\n                            {CITIES.map((city, index) => <option key={index} value={index} selected={selectedCity === index}>{city.name}</option>)}\n                        </CUSSelect>\n                    </CUSInputItem>\n                    <CUSInputItem>\n                        <IconDistrict />\n                        <CUSSelect name=\"\" id=\"\" onChange={e => {\n                            setSelectedDistrict(e.target.value);\n                            setStudent(student => { return { ...student, district: e.target.value !== \"-1\" ? e.target.value : '' }})\n                        }}>\n                            <option value=\"-1\" selected={selectedDistrict === -1}>District</option>\n                            {CITIES[selectedCity] && CITIES[selectedCity].districts.map((district, index) => <option key={index} value={district} selected={selectedDistrict === index}>{district}</option>)}\n                        </CUSSelect>\n                    </CUSInputItem>\n                </CUSFormGroup>\n                <CUSFormGroup>\n                    <CUSInputItem hasDescription>\n                        <IconDescription />\n                        <CUSInput \n                            hasDescription\n                            type=\"text\" \n                            placeholder=\"Description\" \n                            value={student.description} \n                            onChange={e => setStudent(student => {return { ...student, description: e.target.value }})} \n                            required\n                        />\n                    </CUSInputItem>\n                </CUSFormGroup>\n                <FileUpload\n                    style={{ margin: '2rem 0'}}\n                    name=\"file\"\n                    accept=\"image/*\"\n                    onSelect={onSelect}\n                    onRemove={onRemove}\n                    uploadOptions={{ style: {display: 'none'} }}\n                    cancelOptions={{ style: {display: 'none'} }}\n                    emptyTemplate={\n                        <p className=\"p-m-0\"> Drag and drop files to here to upload. (optional)</p>\n                    }\n                />\n                <CUSFormGroup hasButton>\n                    <CUSButton type=\"submit\" onClick={e => createUpdateStudent(e, type, student) }>{ type === 'create' ? 'Register' : 'Update' }</CUSButton>\n                </CUSFormGroup>\n            </CUSForm>\n        </CUSWrapper>\n    )\n};\n\nexport default CreateUpdateStudent;"]},"metadata":{},"sourceType":"module"}